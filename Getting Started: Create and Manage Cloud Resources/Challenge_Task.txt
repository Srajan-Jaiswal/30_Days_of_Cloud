Task 1: Create a project jumphost instance
We will use this instance to perform maintenance for the project.

Make sure you:

name the instance nucleus-jumphost
use the machine type of f1-micro
use the default image type (Debian Linux)


Task 2: Create a Kubernetes service cluster
You have a limit to the resources you are allowed to create in your project, if you don't get the result you expected please delete the cluster before you create another cluster or the lab might exit and you might get banned.
The team is building an application that will use a service. This service will run on Kubernetes. You need to:

Create a cluster (in the us-east1-b zone) to host the service
Use the Docker container hello-app (`gcr.io/google-samples/hello-app:2.0`) as a place holder, the team will replace the container with their own work later
Expose the app on port 8080.


Task 3: Setup an HTTP load balancer
We will serve the site via nginx web servers, but we want to ensure we have a fault tolerant environment, so please create an HTTP load balancer with a managed instance group of two nginx web servers. Use the following to configure the web servers, the team will replace this with their own configuration later.

You have a limit to the resources you are allowed to create in your project, so do not create more than two instances in your managed instance group or the lab might exit and you might get banned.
You need to:

Create an instance template
Create a target pool
Create a managed instance group
Create a firewall rule to allow traffic (80/tcp)
Create a health check
Create a backend service and attach the manged instance group
Create a URL map and target HTTP proxy to route requests to your URL map
Create a forwarding rule
